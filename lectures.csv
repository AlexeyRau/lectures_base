Дата,Название лекции,Содержание лекции
"2025-02-05","первая лекция оаип","### *Выстрел*
User Story - как игрок могу приказать кораблю сделать выстрел, чтобы запустить ракету
Команда - выстрелить
Событие - ракета начала движения
Агрегат - сама игра

---
### *Класс Game*
Необходимо указать игровой объект (космический корабль)
1) Авторизовать пользователя (может ли он приказывать)
2) Поиск игрового объекта
3) Создать необходимый объект (фотонная ракета)
4) Обновить состояние объекта
Выстрел (GameItem ID, User ID)
Обновить состояние игры - возврат от выстрела

---
До : - имя объекта
После : - имя потенциального класса
_ - экземпляр класса
x - объект уничтожен
-> - объект создается
district - приказ

---
### *Класс Auth*
Game использует для авторизации выстрела
Не создается и не умирает в процессе взаимодействия
Внутри выстрела происходит авторизация - ответ либо да, либо нет
Проверить возможность стрельбы в данный момент

---
### *Объект Репозиторий* 
Часть класса Game - стратегия в IOC контейнере
Хранилище существующих объектов
Предоставить группа объектов по входящему запросу (Game Item)
Game хранит Game Item в репозитории

---
Фабрика + IOC
Причем IOC не вложен в Фабрику
Создает фотонную ракету (Game Item)
Возвращается Game Object

---
### *Команды*
Объект Order - key:value
AuthCommand(Приказ) - если Game может обработать его -> Execute(), иначе - Исключение
IAuthOrder

---
### *Стратегии*
- Найти игровой объект - стратегия IOC, которая имеет ссылку на словарь Dict:
	1) Ключ - строковый ID объекта
	2) Значение - сам игровой объект
	3) Объекты хранить через тип Object
	4) В игровом объекте должна быть строка с ID
- Выстрел:
	1) Стратегия IOC для создания нового игрового объекта
	2) Предполагаем, что эта стратегия создает словарь с 1! парой ID
	3) Необходимо получить от космического корабля:
	    - Cтартовое положение ракеты
	    - Направление движения ракеты
	    - Модуль скорости ракеты
	4) Необходимо установить свойства созданной ракеты в соответствии с параметрами выше - это можно сделать с помощью стратегии IOC, которая меняет состояние игрового объекта
	5) Необходимо добавить созданную и проинициализированную ракету в репозиторий игровых объектов - для этого нужна стратегия IOC
	6) Создать команду движения для ракеты
	7) Добавить эту команду в очередь всех остальных команд"
"2025-10-11","вторая лекция оаип","### *Выстрел*
User Story - как игрок могу приказать кораблю сделать выстрел, чтобы запустить ракету
Команда - выстрелить
Событие - ракета начала движения
Агрегат - сама игра

---
### *Класс Game*
Необходимо указать игровой объект (космический корабль)
1) Авторизовать пользователя (может ли он приказывать)
2) Поиск игрового объекта
3) Создать необходимый объект (фотонная ракета)
4) Обновить состояние объекта
Выстрел (GameItem ID, User ID)
Обновить состояние игры - возврат от выстрела

---
До : - имя объекта
После : - имя потенциального класса
_ - экземпляр класса
x - объект уничтожен
-> - объект создается
district - приказ

---
### *Класс Auth*
Game использует для авторизации выстрела
Не создается и не умирает в процессе взаимодействия
Внутри выстрела происходит авторизация - ответ либо да, либо нет
Проверить возможность стрельбы в данный момент

---
### *Объект Репозиторий* 
Часть класса Game - стратегия в IOC контейнере
Хранилище существующих объектов
Предоставить группа объектов по входящему запросу (Game Item)
Game хранит Game Item в репозитории

---
Фабрика + IOC
Причем IOC не вложен в Фабрику
Создает фотонную ракету (Game Item)
Возвращается Game Object

---
### *Команды*
Объект Order - key:value
AuthCommand(Приказ) - если Game может обработать его -> Execute(), иначе - Исключение
IAuthOrder

---
### *Стратегии*
- Найти игровой объект - стратегия IOC, которая имеет ссылку на словарь Dict:
	1) Ключ - строковый ID объекта
	2) Значение - сам игровой объект
	3) Объекты хранить через тип Object
	4) В игровом объекте должна быть строка с ID
- Выстрел:
	1) Стратегия IOC для создания нового игрового объекта
	2) Предполагаем, что эта стратегия создает словарь с 1! парой ID
	3) Необходимо получить от космического корабля:
	    - Cтартовое положение ракеты
	    - Направление движения ракеты
	    - Модуль скорости ракеты
	4) Необходимо установить свойства созданной ракеты в соответствии с параметрами выше - это можно сделать с помощью стратегии IOC, которая меняет состояние игрового объекта
	5) Необходимо добавить созданную и проинициализированную ракету в репозиторий игровых объектов - для этого нужна стратегия IOC
	6) Создать команду движения для ракеты
	7) Добавить эту команду в очередь всех остальных команд"
